@use '@angular/material' as mat;

:host {
  display: block;
  width: 100%;
}

.title-container {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center; // Center the title container
  align-items: center; // Center the title vertically
  z-index: 1; // Ensure it appears above other elements
  pointer-events: none;
}

.title {
  // Flex properties to allow the title to take available space and center itself
  flex-grow: 1; // Allows the title to expand and push other elements to the sides
  text-align: center; // Centers the text content within its available space

  // Font styling for better readability and appearance
  font-size: 1.25rem; // A slightly larger font size for emphasis
  font-weight: 500; // Medium font weight, common for titles
  letter-spacing: 0.5px; // Adds a little breathing room between characters

  // Optional: Prevent text from wrapping if the title is long and space is constrained
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;




}

mat-toolbar {
  // Ensure items are vertically centered if needed (usually default)
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--mat-sys-primary);
  color: var(--mat-sys-on-primary);
}

:host-context(.dark-mode) {
  mat-toolbar {
    background-color: var(--mat-sys-surface-container);
    color: var(--mat-sys-on-surface-container);
  }
}

.left-links,
.right-links {
  display: flex;
  /* Use flexbox for alignment */
  align-items: center;
  /* Center items vertically */
}

.rhs-outlet {
  margin-left: auto;
  /* Aligns the element to the right */
  display: flex;
  /* Ensure content inside aligns well */
  align-items: center;
}

.spacer {
  // Use flex-grow instead of fixed width for better flexibility
  flex: 1 1 auto;
  // Or keep width if preferred, maybe adjust slightly
  // width: 24px;
}

.navlink {
  cursor: pointer;
  margin: 0 12px;
  padding: 8px 4px;
  font-size: 0.9rem;
  font-weight: 500;
  text-decoration: none;
  color: inherit;
  border-bottom: 2px solid transparent;
  transition: color 0.2s ease, border-color 0.2s ease;

  &:hover {
    color: var(--mat-sys-primary);
  }

  // Style for the active route link
  &.active {
    color: var(--mat-sys-primary);
    border-bottom-color: var(--mat-sys-primary);
  }
}

// Ensure icon buttons have consistent spacing and color
button[mat-icon-button] {
  margin: 0 4px; // Add small horizontal margin
  color: inherit;
}

// Responsive adjustments
@media screen and (max-width: 650px) {

  // Match breakpoint in TS
  button[mat-icon-button] {
    margin: 0 2px; // Slightly reduce margin on small screens
  }
}

img {
  width: auto;
  height: 32px;
}