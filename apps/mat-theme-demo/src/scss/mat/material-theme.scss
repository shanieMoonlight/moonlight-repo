// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@use "./typography" as typography;
@use "./theme-colors-default" as ptDefault;
@use "./theme-colors-violet-lime" as ptVl;
@use "./theme-colors-xmas" as ptXmas;
@use "./tests/ml-pallet-tester.scss" as ptTest;
@use "./tests/mat.scss" as ptMATTest;
@use "sass:map";

@use "../theme-utils/theme-helper.scss" as themeHelper;
@use "../theme-utils/direct-palette-mapper.scss" as mapper;

@debug "####################################################";
@debug "ptDefault.$palettes";
@debug "";
@debug "";

@debug ptDefault.$palettes;

@debug "";
@debug "";
@debug "####################################################";
@debug "";
@debug "";

@debug mat.$yellow-palette;


@debug "";
@debug "";
@debug "####################################################";
@debug "";
@debug "";

// // Setup the default theme using the $palettes map from ptDefault
// @include mapper.setup-direct-theme(
//     ptDefault.$palettes // Pass the whole map
// );

// // Setup the alternate theme using the $palettes map from pt2
// @include mapper.setup-direct-theme-alternate(
//     "violet-lime",
//     ptVl.$palettes // Pass the whole map
// );

// // Setup the alternate theme using the $palettes map from pt2
// @include mapper.setup-direct-theme-alternate(
//     "xmas",
//     ptXmas.$palettes // Pass the whole map
// );
html {
    @include mat.theme(
        (
            // color: mat.$yellow-palette
            // color: mat.$orange-palette
            // color: ptTest.$palettes
            // color: ptMATTest.$palettes
        )
    );
}


body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  // These will be set by the ThemeGeneratorService
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}


// Theme switching can be done by adding the corresponding class to the body:
// - Default theme: no class needed
// - Theme 2: add class "theme-2" to body (or adjust suffix as needed)

// Setup the default theme using the $palettes map from ptDefault
// @include themeHelper.setupTheme(
//     ptDefault.$palettes // Pass the whole map
//     // Optional: Add dark mode class if different
// );

// // Setup the alternate theme using the $palettes map from pt2
// @include themeHelper.setupThemeAlternate(
//     '2',
//     pt2.$palettes // Pass the whole map
//     // Optional: Add dark mode class if different
// );

// @include themeHelper.setupThemeAlternate(violet-lime, pt2.$primaryPalette, pt2.$accentPalette, pt2.$tertiaryPalette);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
@include mat.all-component-typographies(typography.$fontConfig);
@include mat.core();
