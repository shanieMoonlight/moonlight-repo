@use '@angular/material' as mat;

:host {
  display: block;
  margin: 20px;

  @include mat.list-overrides((list-item-two-line-container-height:auto));
  @include mat.list-overrides((list-item-three-line-container-height:auto));
}

mat-card {
  margin-bottom: 20px;
  // Use surface container for card background if needed, though component might handle it
  // background-color: var(--mat-sys-surface-container);
  // color: var(--mat-sys-on-surface);
}

mat-card-header {
  padding-bottom: 16px;
}

h2,
h3 {
  margin-top: 24px;
  margin-bottom: 8px;
  color: var(--mat-sys-on-surface); // Ensure headings use appropriate color
}

mat-divider {
  margin-top: 16px;
  margin-bottom: 16px;
  border-top-color: var(--mat-sys-outline-variant); // Use outline variant for divider
}

p {
  margin-bottom: 1em;
  line-height: 1.6;
  color: var(--mat-sys-on-surface-variant); // Use on-surface-variant for less emphasis
}

// Style code blocks to fit Material theme
pre>code {
  display: block;
  padding: 16px;
  margin: 16px 0;
  border-radius: 4px;
  overflow-x: auto;
  // Use a surface container variant for code background
  background-color: var(--mat-sys-surface-container); // Or --mat-sys-surface-container
  color: var(--mat-sys-on-surface-variant); // Use variant color for code text
  border: 1px solid var(--mat-sys-outline-variant); // Add subtle border
}

// Style inline code chips
mat-list-item {
  display: inline-block;
  vertical-align: middle;
  margin: 0 2px;

  mat-chip {
    font-family: monospace;
    font-size: 0.9em;
    height: auto;
    min-height: 20px;
    padding: 2px 6px;
    // Use a container color for chips
    background-color: var(--mat-sys-secondary-container); // Or primary/tertiary container
    color: var(--mat-sys-on-secondary-container); // Corresponding on-container color
  }
}

.inline-chips {
  display: flex;
  flex-wrap: wrap;

  mat-chip {
    margin: 2px;
  }
}


.step {
  margin-bottom: 1.5em;
  padding: 0 16px;
}

// Style gotchas list
.gotchas-list {
  .mdc-list-item {
    // Target the underlying MDC class
    // Use error container for background
    background-color: var(--mat-sys-error-container);
    color: var(--mat-sys-on-error-container); // Set text color for contrast
    border-radius: 4px;
    margin-bottom: 8px;
    // Adjust padding if needed
    padding-top: 8px;
    padding-bottom: 8px;
  }

  mat-icon[color="warn"] {
    color: var(--mat-sys-error); // Ensure icon uses the main error color
    vertical-align: middle; // Align icon nicely
  }

  // Adjust list item title/line colors if needed, though on-error-container should work
  span[matListItemTitle],
  span[matListItemLine] {
    color: var(--mat-sys-on-error-container);
  }



}